#
# This is the Apache configuration for the dmlite DAV.
#
# The first part of the file configures all the required options common to all
# VirtualHosts. The actual VirtualHost instances are defined at the end of this file.
#

<%if @enable_srr_cgi -%>
# publish WLCG SRR information online
ScriptAlias /static/srr "/usr/bin/dpm-storage-summary.cgi"
<% end -%>

# Static content
Alias /static/ /usr/share/lcgdm-dav/
<Location "/static">
  <IfModule expires_module>
    ExpiresActive On
    ExpiresDefault "access plus 1 month"
  </IfModule>
  <IfModule include_module>
    Options +Includes
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
  </IfModule>

  <IfVersion >= 2.4>
    Require all granted
  </IfVersion>
  <IfVersion < 2.4>
    Order allow,deny
    Allow from all
  </IfVersion>
  <IfVersion >= 2.4>
    SSILegacyExprParser on
  </IfVersion>
</Location>

# Custom error messages
# Only make sense if include_module is loaded
<IfModule include_module>
    ErrorDocument   400 /static/errors/400.shtml
    ErrorDocument   403 /static/errors/403.shtml
    ErrorDocument   404 /static/errors/404.shtml
    ErrorDocument   405 /static/errors/405.shtml
    ErrorDocument   409 /static/errors/409.shtml
    ErrorDocument   500 /static/errors/500.shtml
    ErrorDocument   501 /static/errors/501.shtml
    ErrorDocument   503 /static/errors/503.shtml
    ErrorDocument   507 /static/errors/507.shtml
</IfModule>

# robots.txt
Alias /robots.txt /usr/share/lcgdm-dav/robots.txt

# favicon.ico
Alias /favicon.ico /usr/share/lcgdm-dav/icons/favicon.ico

# Compress text output (i.e. directory listings)
# This can reduce really _a_lot_ the response time for big directories.
AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css

# Load all required modules for our own
<IfModule !mime_magic_module>
  LoadModule mime_magic_module  /usr/<%= @libdir %>/httpd/modules/mod_mime_magic.so
</IfModule>
<IfModule !dav_module>
  LoadModule dav_module         /usr/<%= @libdir %>/httpd/modules/mod_lcgdm_dav.so
</IfModule>

# Alias for the delegation
ScriptAlias /gridsite-delegation "/usr/libexec/gridsite/cgi-bin/gridsite-delegation.cgi"
<IfVersion >= 2.4>
    <Location /gridsite-delegation>
        Require all granted
    </Location>
    ScriptSock /var/run/cgid.sock
</IfVersion>

# Disable the deadly session files of libgridsite
GridSiteGridHTTP off
GridSiteAutoPasscode off

<%if @enable_ns -%>
# The location of the base dmlite configuration file
NSDMLite <%= @dmlite_conf %>

# Accepted values: DPM, LFC or Plain
# DPM: Supports writes, assumes there is a disk behind each redirection, so it uses special semantics
# LFC: Does not support writes
# Plain: Supports writes, does not assume disk behind each redirection, so it doesn't use special semantics
# For DynaFed, use Plain
NSType <%= @ns_type %>

<%if @enable_ns_oidc -%>
# OpenID Connect configuration options
OIDCResponseType                "code"
OIDCScope                       "<%= @ns_oidc_scope %>"
OIDCProviderMetadataURL         <%= @ns_oidc_metadataurl %>
OIDCClientID                    <%= @ns_oidc_clientid %>
OIDCClientSecret                <%= @ns_oidc_clientsecret %>
OIDCProviderTokenEndpointAuth   client_secret_basic
OIDCCryptoPassphrase            <%= @ns_oidc_passphrase %>
OIDCRedirectURI                 <%= @ns_oidc_redirecturi %>
OIDCOAuthVerifyJwksUri          <%= @ns_oidc_auth_verify_jwks_uri %>
OIDCOAuthRemoteUserClaim        sub
<% end -%>

# Base path for nameserver requests
<LocationMatch "^/<%= @ns_prefix %>/.*">

  LoadModule lcgdm_ns_module      /usr/<%= @libdir %>/httpd/modules/mod_lcgdm_ns.so

  # Enable LCGDM DAV here
  DAV nameserver

<%if @ns_flags -%>
  # Write      Enable write access
  # NoAuthn    Disables user authentication
  # RemoteCopy Enables third party copies
  NSFlags <%= @ns_flags %>
<% end -%>

<%if @enable_ns_oidc -%>
  # Use this user for anonymous access
  # It has to be in the mapfile!
  NSAnon nobody:nogroup

  # Check the authorization HTTP header
  <If "%{HTTP:Authorization} =~ /^[Bb][Ee][Aa][Rr][Ee][Rr] dpm-macaroon/">
   AuthType oauth20
   #Require valid-user
  </If>
  <ElseIf "%{HTTP:Authorization} != ''">
   AuthType oauth20
   Require valid-user
  </ElseIf>
  <ElseIf "%{HTTP:User-Agent} =~ /Mozilla|Chrom|MSIE/">
   AuthType openid-connect
   Require valid-user
  </ElseIf>
<% else -%> 
<%if @ns_anon -%>
  # Use this user for anonymous access
  # It has to be in the mapfile!
  NSAnon <%= @ns_anon %>
<% end -%>
<% end -%>

<%if @ns_macaroon_secret -%>
  NSMacaroonSecret <%= @ns_macaroon_secret %>
<% end -%>

  # On redirect, maximum number of replicas in the URL
  # (Used only by LFC)
  NSMaxReplicas <%= @ns_max_replicas %>

  # Redirect using SSL or plain HTTP? Default is On
  NSSecureRedirect <%= @ns_secure_redirect %>
  <% if @dav_http_port.to_i != 80 or @dav_https_port.to_i != 443 -%>
  # Redirection ports
  # Two parameters: unsecure (plain HTTP) and secure (HTTPS)
  NSRedirectPort <%= @dav_http_port %> <%= @dav_https_port %>
  <% end -%>

<%if @ns_trusted_dns -%>
  # List of trusted DN (as X509 Subject).
  # This DN can act on behalf of other users using the HTTP headers:
  # X-Auth-Dn
  # X-Auth-FqanN (Can be specified multiple times, with N starting on 0, and incrementing)
  NSTrustedDNS <%= @ns_trusted_dns %>
<% end -%>

</LocationMatch>
<% end -%>

<%if @enable_disk -%>
DiskDMLite <%= @dmlite_disk_conf %>

# Filesystem location
<LocationMatch "^/(?!(<%= @disk_prefix %>|static|icons)/).*">

  LoadModule lcgdm_disk_module	/usr/<%= @libdir %>/httpd/modules/mod_lcgdm_disk.so

  # Enable LCGDM DAV here
  DAV disk

<%if @disk_flags -%>
  # None, one or several flags
  # Write      Enable write access
  # RemoteCopy Allow the COPY method
  # NoAuthn    Disables user authentication
  DiskFlags <%= @disk_flags %>
<% end -%>

<%if @disk_anon -%>
  # Use this user for anonymous access
  # It has to be in the mapfile!
  DiskAnon <%= @disk_anon %>
<% end -%>

  # Delegation service. If it does not start with http:/https:,
  # https will be assumed, and the host name appended.
  DiskProxyDelegationService /gridsite-delegation

  # Where delegation proxies are stored. This is hard-coded in the GridSite
  # CGI, it allways has to be DocumentRoot/../proxycache
  DiskProxyCache /var/www/proxycache

<% if @dav_http_port.to_i != 80 or @dav_https_port.to_i != 443 -%>
  NSRedirectPort <%= @dav_http_port %> <%= @dav_https_port %>
<% end -%>

  # Trusted certificates for TPC connection to remote storage
<% if @ssl_tpc_capath -%>
  DiskSSLCACertificatePath <%= @ssl_tpc_capath %>
<% else -%>
  #DiskSSLCACertificatePath /etc/grid-security/certificates
<% end -%>
<% if @ssl_tpc_crlpath -%>
  DiskSSLCARevocationPath <%= @ssl_tpc_crlpath %>
  DiskSSLCARevocationCheck chain
<% else -%>
  #DiskSSLCARevocationPath /etc/grid-security/certificates
  DiskSSLCARevocationCheck none
<% end -%>

  # Terminate slow (stuck) transfers if bytes transferred
  # in given time window is smaller then configured tresholds
  # (default: 2 minute average speed < 10kB/s)
  #DiskLowSpeedTime 120
  #DiskLowSpeedLimit 10240

</LocationMatch>
<% end -%>

<%if @enable_http -%>
#
# This is the plain HTTP LCGDM DAV VirtualHost.
#
<%if @dav_http_port.to_i != 80 -%>
Listen <%= @dav_http_port %>
<% end -%>
<VirtualHost *:<%= @dav_http_port %>>
  KeepAlive on
  TraceEnable off
</VirtualHost>
<% end -%>

<%if @enable_https -%>
#
# This is the SSL enabled LCGDM DAV VirtualHost.
# WARN: If the _default_ VirtualHost is already defined in ssl.conf or in another
# module file, they will have priority over the definition below, and the frontend
# might not work as expected.
#
Listen <%= @dav_https_port %>

<VirtualHost *:<%= @dav_https_port %>>
  KeepAlive on
  TraceEnable off

  LoadModule ssl_module modules/mod_ssl.so

  # To use the LCGDM DAV module you need to enable the SSL directives below.
  # WARN: Check warning above related to SSL directives and the VirtualHost in ssl.conf.
  <IfModule ssl_module>

    LoadModule gridsite_module	/usr/<%= @libdir %>/httpd/modules/mod_gridsite.so

    SSLEngine	on
    SSLProtocol <%= @ssl_protocol %>
    SSLCipherSuite <%= @ssl_ciphersuite %>
    SSLHonorCipherOrder on

    # Certificates and CAs
    SSLCertificateFile		<%= @ssl_cert %>
    SSLCertificateKeyFile	<%= @ssl_key %>
    SSLCACertificatePath 	<%= @ssl_capath %>
    SSLCARevocationPath		<%= @ssl_capath %>
<%if @ssl_capath -%>
    <IfVersion >= 2.4>
      SSLCARevocationCheck      chain
    </IfVersion>
<% end -%>

    # Client verification should be at least optional (see ssl.conf for more information)
    SSLVerifyClient optional
    SSLVerifyDepth  10

    SSLOptions <%= @ssl_options %>

    # Logging
    #LogFormat   "%h %l %u %t \"%r\" \"%{Location}o\" %>s %b"
    ErrorLog	<%= @log_error %>
    TransferLog	<%= @log_transfer %>
    LogLevel	<%= @log_level %>
    CustomLog	logs/ssl_request_log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

  </IfModule>

</VirtualHost>
<% end -%>
